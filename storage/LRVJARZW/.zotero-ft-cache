Digital Image Processing and
Applications
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


Course Outline
• Image Representation
• Motion Estimation (including Optical Flow
Techniques)
• Image & Video Compression
• Human Visual System
• Image Halftone Techniques
• Image Filtering Techniques
• Image Interpolation & Super-resolution
• Edge Detection


A picture is worth a thousand words.
A video is worth a thousand sentences.
• Rich information from visual data
• Examples of images around us
– Natural photographic images
– Artistic and engineering drawings
– Scientific images (satellite, medical, etc.)
• Motion picture – video
– Movies, TV programs, news
– Family video
– Surveillance and highway camera


Why do we process images & videos?
• Enhancement and restoration
– To remove artifacts and scratches from an old photo/movie
– To improve contrast and correct blurred images/videos
• Transmission and storage
– To transmit images from oversea via Internet, or from a remote planet
• Information analysis and automated recognition
– To provide “human vision” to machines ~ computer vision
• Security and rights protection
– encryption and watermarking


Why Digital?
• “Exactness”
– Perfect reproduction without degradation
– Perfect duplication of processing result
• Convenient & powerful computer-aided processing
– Can perform rather sophisticated processing through hardware or software
– Even kindergartners can do it!
• Easy storage and transmission
– Paperless transmission of high quality photos/videos through network within seconds


Compression
• Color image of 600800 pixels
– Without compression
• 600  800  24 bits/pixel = 11.52K bits = 1.44M bytes
– After JPEG compression (popularly used on web)
• only 89K bytes
• compression ratio ~ 16:1
• Movie
– 720 x 480 per frame, 30 frames/sec, 24 bits/pixel
– Raw video ~ 243M bits/sec
– DVD ~ about 5M bits/sec
– Compression ratio ~ 48:1
“Library of Congress” by Dr. M.Wu (@Maryland University)


Image Halftone
Original Image Threshold at Mid-Gray Dispersed Dot Screening
Clustered Dot
Screening
Floyd Steinberg
Error Diffusion
Stucki Error
Diffusion


Image Denoising
3% Salt and Pepper Impulse Noise
Median Filtering Gaussian Noise
Bilateral Filtering [1]


Image Interpolation &
Superresolution
nearest
bilinear
bicubic
in scale BP
ICCV2009 [2]
clear


Image Segmentation
A Color Textile Image
MultBieslciaeMlfeePaCrnoo-psntaheigfxattt[io4M]no[d3e]l [5]


References
• [1] C. Tomasi and R. Manduchi, “Bilateral filtering for gray and color images,” in Proc. of IEEE International Conference on Computer Vision (ICCV), 1998.
• [2] D. Glasner, S. Bagon, and M. Irani, “Super-resolution from a single image,” in Proc. of IEEE International
Conference on Computer Vision (ICCV), pp.349-356, 2009.
• [3] P. Felzenszwalb and P. Huttenlocher, “Efficient belief propagation for early vision,” International Journal of Computer Vision, vol.70, no.1, 2006.
• [4] D. Comaniciu and P. Meer, “Mean shift: a robust approach toward feature space analysis,” IEEE Trans. On
Pattern Analysis and Machine Intelligence, vol.24, no.5, pp. 603-619, 2002.
• [5] X. Lu, “Color textile image segmentation based multiscale probabilistic reasoning,” Optical Engineering, vol.46, no.8, 087002, 2007.


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Spatial Domain Representations of
Natural Images
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


SPATIAL DOMAIN REPRESENTATIONS
Image Representation


Different Image Types
• Binary images (0 or 1)
• Gray images ([0, 255] or 8 bits/pixel)
• Color images
– Indexed color images (based on palette)
– Full color images (24 bits/pixel, 8 bits for red, 8 bits for
green, and 8 bits for blue)


Is this a binary image or a gray image?
This is a halftoned image. It looks like a gray image, but it is a binary image.


Perceived Gray Tone
Lena Halftoned Lena


Bit Planes of a Gray Image
A standard gray image
The most significant bit plane
The least significant bit plane


Bit Depth (# of Gray Levels)
256 32 16
842
Mach band


Full Color Images
• 24 bits per pixel, and the three channels R G B are
three gray images respectively.
class Image {
unsigned int width;
unsigned int height;
unsigned char *data;
}
0r 0g 0b 1g
1r 1b 2r 2g 2b 3r 3g
3r,g,b
0r,g,b 1r,g,b 2r,g,b
4r,g,b 5r,g,b
8r,g,b
7r,g,b
6r,g,b


Color Components of a Color Image
Original Color Image
Red Component
Green Component
Blue Component


An Indexed Color Image
Color Table
0
1
2
3
4
5
6
7
4302
1745
3765
2211
Pixel Data Image


A GIF Image


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Fourier Transform (I)
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


PRIORI BASIS FOR NATURAL IMAGES
Image Representation


Basic Exponential Signals (I)
• Basic building signals and
– and  denote the radian frequencies in the continuous-time and discrete-time domains, respectively.
• The properties of continuous-time exponential signals
– This is a periodic signal
• The fundamental period is T=2/
– the larger the magnitude of , the higher rate of oscillation of the signal.
– and are orthogonal to each other whenever |1||2|
jt
e j n
e
jt
e
1
jt
e 2
jt
e
2
()
( ) j tk
j t j t kT
ee e


 





To prove and are orthogonal to each other whenever |1||2|
Because they are periodic signals, we only need to prove they are
orthogonal to each other within a common period.
1
jt
e 2
jt
e
1 2 12 12
12
11 1 2 2 2 1 2
12
() ()
12
00
( )2
12
2 2 (, )
1
0
()
1 ( 1) 0
()
TT jt j t j t j t
jk k
Assume T k T k and T k T k k k Z
T
e e dt e dt e
j
e
j
   








   
 
 


Now assume T is the least common multiple of T1 = 2/1 and T2 =
2/2


Basic Exponential Signals (II)
• The properties of discrete-time exponential signals
– is NOT periodic for arbitrary values of 
• Only when /2 = m/N (m and N are integers, i.e. only when /2
is a rational number)
• But is a periodic signal w.r.t. .
– are NOT distinct, as the signal with frequency 0 is
identical to the signals with frequencies (0  2), (0  4),
 and so on (0  2k) .
jn
e
jn
e
jn
e  j n j( 2 )n
e  e  

j n j (n N ) j( n 2 m)
e e  e 



vs.
Distinct signals for distinct
magnitudes of 
Identical signals for
exponential at frequencies
separated by 2
Periodic for any choice of  Periodic only if 0 =2(m/N)
for some integers N > 0 and
m.
Fundamental frequency 0 Fundamental frequency if it is
periodic: 0 /m
Fundamental period
0=0: undefined
00: 2/0
Fundamental period if it is
periodic
0=0: undefined
00: m(2/0 )
jt
e j n
e
jt
e j n
e


Euclidean Geometric Space
• 3D Euclidean Geometric Space
– 3 basic vectors
– Analysis
– Synthesis
Signal Space
and are orthogonal to each other whenever |1||2|
1
jt
e 2
jt
e
123
ave bve cve
123
v  ae  be  ce
• The number of basic signals is infinite.
• This is a complex space
– Analysis
– Synthesis
( ) () ()
jt jt
X x t e dt x t e dt


 

 


() ( ) jt
xt X e d







Continuous-Time Fourier
Transform
• A representation of continuous-time aperiodic signals
– Analysis
– Synthesize
2
( ) () ( ) ()
j ft j t
X f x t e dt or X x t e dt


  
 


21
() ( ) () ( )
2
j ft j t
x t X f e df or x t X e d



 
 




Dirichlet Conditions
• A continuous-time aperiodic signal x(t) has a Fourier
transform only if it satisfies the following conditions:
– 1) x(t) is absolutely integrable, namely
– 2) x(t) has only a finite number of maximum and minima within any
finite interval.
– 3) x(t) has only a finite number of discontinuities within any finite
interval.
x(t) dt

  



References
• [1] A. V. Oppenheim, A. S. Willsky and I. T. Young,
Signals and Systems, Prentice-Hall, 1983.


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Fourier Transform (II)
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


PRIORI BASIS FOR NATURAL IMAGES
Image Representation


Continuous-time Fourier Series
• Suppose x(t) is a continuous-time periodic signal: x(t) = x(t + kT0)
• The basic signals are (k = 0, 1, 2, ) (0 = 2/T0)
• Analysis
– The coefficients {ak} are often called the Fourier series coefficients or the
spectral coefficients of x(t)
• Synthesis
– If x(t) is a real signal, then ak = ak.
0
( ) jk t
k k
xt ae 



0
0
0
1 ( ) jk t
k
T
a x t e dt
T


0
jk t
e


Dirichlet Conditions
• A periodic signal x(t), has a Fourier series only if it
satisfies the following conditions:
– 1) x(t) is absolute integrable over any period, namely
– 2) x(t) has only a finite number of maximum and minima
over any period
– 3) x(t) has only a finite number of discontinuities over any
period
T x(t) dt R


  



An Periodic Square Wave


Discrete-time Fourier Series
• How about x[n] is a discrete-time periodic signal?
– x[n] = x[n + N] or x[n] = x[n +kN] (k  Z)
– Now if we divide the circle 2 into N points, we will get N
different discrete frequencies , k  {0, 1, , N1} or
k  {1, 2, , N}, and so on. (k = <N>)
– and are orthogonal to each other whenever k1
 k2 and k1 , k2  <N> (the set of N consecutive integer
numbers)
– An important distinction between the set of harmonically
related signals in discrete-time and continuous-time is
• There are only N different signals in the set k = 0, 1, 2,

• Whereas all of the (k = 0, 1, 2, ) are distinct.
2
jk n
N
e

1
2
jk n
N
e

2
2
jk n
N
e

2
jk n
N
e

0
jk t
e


Discrete-time Fourier Series
• Suppose x[n] is a periodic signal in discrete-time
domain
– Remember that we only have N different signals
in the set k = 0, 1, 2, 
• Analysis
• Synthesis
2
1 [ ] jk n
N k
nN
a xne
N


 

2
[ ] jk n
N k kN
xn ae

 



Discrete-time Fourier Transform
• Now suppose x[n] is an aperiodic signal in discrete
time domain
• Analysis
• Synthesis
• The continuous periodic in the frequency domain
  [] jn
n
X xne



 

2
1
[] 2
jn
xn X e d



 

  
X   2  X 


Summary of Basis Signals
• Continuous-time
– Fourier Series for periodic signals 
– Fourier Transform for aperiodic Signals 
• Discrete-time
– Discrete-time Fourier series for periodic signals 
– Discrete-time Fourier Transform for aperiodic Signals

0
jk t
e
jt
e
2
N
jk n
e

jn
e


References
• [1] A. V. Oppenheim, A. S. Willsky and I. T. Young,
Signals and Systems, Prentice-Hall, 1983.


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Fourier Transform (III)
 DFT
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


PRIORI BASIS FOR NATURAL IMAGES
Image Representation


Discrete Fourier Transform (DFT)
• A finite duration aperiodic signal x[n], x[n] = 0
outside of the interval 0  n  N1.
• Construct a periodic signal with period of N
(N  N1), over one period = x[n] (0  n <
N).
– According to the discrete-time Fourier series, the
DFT of x[n] is usually written as
– The synthesis equation
[ ] , 0,1, , 1
1
()
~1
0
2
  


x n e k N
N
Xk a
N
n
n
N
jk
k

( ) , 0,1, , 1
~
[]
1
0
2
  


xn X k e n N
N
k
n
N
jk 

x[n]
x[n]


The DFT Analysis in Matrix
Vector Form
[ ] , 0,1, , 1
1
()
~1
0
2
  


x n e k N
N
Xk a
N
n
n
N
jk
k

































  

[ 1]
[0]
( 1)
~
(0)
~
1,0 1, 1
0,0 0, 1
xN
x
WW
WW
XN
X
N NN
N


 


where
2
,
1 jk n
N kn
We
N





DFT Basis
• DFT Matrix
2 / 2 ( 1)/
2 ( 1)/ 2 ( 1)( 1)/
11 1
1
1
1
jN jN N
jN N jNN N
ee
WN
ee


 
   

 
 




The DFT Analysis in Matrix-Vector
Form


00
N1
0 ,N-1
,0 1, 1
[0]
[ 1]
(0)
( 1) [0]
[ 1]
NN
x
WW
xN
X
XN x
WW
xN
 









  

  
  

 
  









,


Inverse DFT Basis
2 / 2 ( 1)/
2 ( 1)/ 2 ( 1)( 1)/
11 1
1
1
jN jN N
H
jN N jNN N
ee
W
ee



 

 
 




The DFT Synthesize in Matrix-Vector
Form
( ) , 0,1, , 1
~
[]
1
0
2
  


xn X k e n N
N
k
n
N
jk 

**
0,0 1
01
,0
**
,1 ,1
[0]
(0) ( 1)
[ 1] N
N
NN
xW W
X XN
xN W W

 
  
    
   
  

    

    
where 2
*
,
jk n
N kn
We




An Fourier Analysis Example
t = 0:0.001:0.6; f = 1000*(0:255)/512;
x = cos (2*pi*100*t)+sin(2*pi*260*t);
y = x + 2*randn(size(t)); Y = fft(y, 512);
P = Y.*conj(Y)/512;
figure(1); plot(t, y); figure(2); plot(f, P(1:256));


References
• [1] A. V. Oppenheim, A. S. Willsky and I. T. Young,
Signals and Systems, Prentice-Hall, 1983.


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Fourier Transform (IV)
 2D DFT
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


PRIORI BASIS FOR NATURAL IMAGES
Image Representation


Discrete Fourier Transform
• Forward transform (Analysis)
• Inverse transform (Synthesis)
12
12
11
1 2 12 1 1 2 2 00
12 1 2
1 22
( , ) ( , ) exp
NN
kk
x n n X k k jk n jk n
NN N N








12
12
11
12 12 1 1 2 2
00 1 2
22
( , ) ( , ) exp
NN
nn
X k k x n n jk n jk n
NN




 





Synthesized 2D images and
their magnitude spectrums
DFT


Synthesized 2D image and its
magnitude spectrum (II)
(a) This image exclusively has 4 cycles horizontally and 16 cycles vertically.
(b) Magnitude spectrum of the image


Two step images and their
magnitude spectrums
DFT


The Magnitude (DFT of Lena)


To Combine the Magnitude of One Image and
the Phase of the Other Image


Resulting
Hint: fft2, abs and angle in the MatlabTM.


References
• [1] A. V. Oppenheim, A. S. Willsky and I. T. Young,
Signals and Systems, Prentice-Hall, 1983.


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Discrete Cosine Transform
(DCT)
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


PRIORI BASIS FOR NATURAL IMAGES
Image Representation


DCT
• A priori basis for natural images (not data-driven)
• DCT Basis Functions is defined as:
1 } 0,1, , 1
2
(2 1)
cos
2
{  

k k N n N
nk
a
N
t

where k  0,1,, N 1






10
0
2
1
k
k
ak


8-Point DCT Example
• Suppose we have a 8-point signal, that is n = 0, 1, ... 7, then the 8-point DCT transform matrix will be:
– Each column in Tt is computed with a fixed “k”, for
example the 1st column is computed by k = 0, the last column is computed by k = 7.
– You can consider each column of Tt as a basic vector.








































   

0.191 0.098
0.462 0.278
0.354 0.278
0.354 0.49
0.462 0.416
0.191 0.098
0.354 0.49
0.354 0.416
0.462 0.416
0.191 0.49
0.354 0.098
0.354 0.416
0.191 0.49
0.462 0.278
0.354 0.278
0.354 0.098
0.191 0.49
0.462 0.416
0.354 0.416
0.354 0.098
0.462 0.278
0.191 0.49
0.354 0.098
0.354 0.278
0.462 0.278
0.191 0.098
0.354 0.49
0.354 0.278
0.191 0.098
0.462 0.416
0.354 0.416
0.354 0.49
t
T


8 Basis Vectors of the 8-Point DCT
t1
t2
t3
t4
t5
t6
t7
t8


The DCT in Matrix-Vector Form
• Example: 8-Point (N = 8) DCT





1
0
X( ) 1 [ ]
N
n
k tk x n
(0) 0.354 0.354 0.354 0.354 0.354 0.354 0.354 0.354
(1) 0.49 0.416 0.278 0.098 0.098 0.278 0.416 0.49
(2) 0.462 0.191 0.191 0.462 0.4
(3) 0.416 0.098 0.49
(4) 0.354 0.354 0.354
(5)
(6)
(7)
X
X
X
X
X
X
X
X

    
    
  
 
  
   


62 0.191 0.191 0.462
0.278 0.278 0.49 0.098 0.416
0.354 0.354 0.354 0.354 0.354
0.278 0.49 0.098 0.416 0.416 0.098 0.49 0.278
0.191 0.462 0.462 0.191 0.191 0.462 0.462 0.191
0.098 0.278 0.416 0.49 0.49 0.416 0.278 0.098




  
  
  
[0]
[1]
[2]
[3]
[4]
[5]
[6]
[7]
x
x
x
x
x
x
x
x
                               
  
  


2-D DCT Transform
• Forward DCT
• Backward DCT
11
00
2 (2 1) (2 1)
( , ) ( ) ( ) ( , ) cos cos
22
NN
xy
xu yv
Fuv CuCv f x y
N NN





 


11
00
2 (2 1) (2 1)
( , ) ( ) ( ) ( , ) cos cos
22
NN
uv
xu yv
f x y CuCvFuv
N NN





 


where 1
( ), ( ) , 0
2
( ), ( ) 1
Cu Cv uv
C u C v otherwise




12 3
0.5000 0.6533 0.5000 0.2706
0.5000 0.2706 0.5000 0.6533
0.5000 0.2706 0.5000 0.6533
0.5000 0.6533 0.5000 0.2706
0.5000 0.6533 0
0.5000 0.2706
0.5000 0.2706
0.5000 0.6533
T
ff f
 


 




  
     
 
  

  

  
4
11 1 2
.5000 0.2706
0.5000 0.6533
0.5000 0.6533
0.5000 0.2706
0.25 0.25 0.25 0.25 0.3266 0.1383 0.1383 0.3266
0.25 0.25 0.25 0.25 0.3266 0.
0.25 0.25 0.25 0.25
0.25 0.25 0.25 0.25
TT
f
ff ff
  
  

  

  
   

  


 

 

13 14
1383 0.1383 0.3266
0.3266 0.1383 0.1383 0.3266
0.3266 0.1383 0.1383 0.3266
0.25 0.25 0.25 0.25 0.1353 0.3266 0.3266 0.
0.25 0.25 0.25 0.25
0.25 0.25 0.25 0.25
0.25 0.25 0.25 0.25
TT
ff ff



 




  










44
1353
0.1353 0.3266 0.3266 0.1353
0.1353 0.3266 0.3266 0.1353
0.1353 0.3266 0.3266 0.1353
0.0732 0.1768 0.1768 0.0732
0.1768 0.4268 0.4268 0.1768
0.1768 0.4268 0.4268 0.1768
0.0732 0.1768 0.1768 0
T
ff



 






 
  .0732

   

4  4 DCT Transform




16 Basic Images of 44 DCT


Experimental Results
“Barbara” DCT Transform of 44
blocks
256256 DCT Transform
of Whole Image
Rearrange DCT
coefficients in subbands
DCT Transform of 44
blocks
Spatial and Frequency Localization Uncertainty Principle


Matlab Code
• im = imread(‘barbara.bmp','bmp'); • [H, W, dim] = size(im); • if dim ~= 1 • im = rgb2gray(im); • end • N = 4; • im = double(im) - 127; % center the input image around zero • im_blocks = im2col(im, [N N], 'distinct'); • num_blocks = size(im_blocks, 2);
• for i = 1:num_blocks • DCT_coef(:,i) = dct(im_blocks(:,i), N*N); • end •
• im_DCT = col2im(DCT_coef, [N N], [H W], 'distinct'); • subbands = col2im(DCT_coef', [H/N W/N], [H W], 'distinct');


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Principal Component Analysis
(PCA)
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


POSTERIOR BASIS FOR NATURAL IMAGES
Image Representation


Basis for Natural Images
• Priori Basis
– Fourier transforms
– DCT
–
• Posterior Basis (data-driven)
– To estimate the linear transform from the data itself, and the transform could be ideally adapted to the kind of data that is being processed.
• PCA
• Dictionary based on machine learning


Two Properties of Image Transforms
• Variable decoupling
– The coefficients of these bases are less correlated or
become independent in ideal cases.
• Dimension reduction
– The number of bases for approximately reconstructing
an image is often much smaller than the number of
pixels.


PCA [1]
• Either DFT or DCT has “energy compaction”
property.
• What is the optimal transform in terms of energy
compaction?
• Two basic concepts in statistical analysis: variance
and covariance of random vectors


Variance and Covariance
• Consider two random vectors with zero means a = [a1, a2,
, an]T, b = [b1, b2, , bn]T.
• The variance of a and b are defined as
– where the expectation i is the average over n variables.
• The covariance between a and b is a straight-forward
generalization:
22
1
n
ii i
i i
 aa a

 
a
2
i ii
b b
b
2
i ii
 a b
ab


Sample Covariance Matrix
• We generalize two random vectors to an arbitrary number.
Suppose we have m random vectors, and each vector has n
variables.
• The nm observation matrix X is defined as
• The sample covariance matrix is estimated

11 1
1
1
m
m
n mn
xx
xx
 
  


Xx x
1
1
T
Cm

X XX


Goal of PCA
• The goal of PCA is to find a set of basis in which the
observation matrix X is transformed to a new observation
matrix Y, and the covariance matrix of Y will be a
diagonal matrix  to remove correlation among data
whereas to preserve the energy as much as possible.
• Assumptions of PCA:
– Firstly all basis vectors {p1, , pn} are orthonormal (i.e. pipj =
ij), that is all basis vectors construct an orthonormal matrix P.
– Secondly, the directions with the largest variances are more
important than those with low variances, so in the transformed
space the energy of signals is kept as compact as possible.


Eigen-Value Decomposition
• In the linear algebra, the covariance matrix Cx can be
diagonalized by an orthogonal matrix of its eigen-vectors.
• Eigen-value decomposition: Cx = EDET
• If the orthonormal transform matrix P is selected as P = ET,
Y = PX = ETX
1
1
1 ( )( )
1
1
1
T Y
T TT
TT
T
TT
Cm
m
m
C






X
YY
EX EX
E XX E
EE
E EDE E
D


64 88 principal components (or basic
images) learned from the image “Lena"






Reconstructed images with different number of PCs
20
10
5
Original Image PSNR= 36.0315 dB
PSNR= 32.2466 dB PSNR= 29.2603 dB


References
• [1] M. J. T. Smith and A. Docef, A Study Guide for Digital Image Processing, Scientific Publishers, Inc. Riverdale, Georgia, 1999.


Thank You!
Dr. Xiqun Lu
xqlu@zju.edu.cn


Motion Estimation
Dr. Xiqun Lu
College of Computer Science
Zhejiang University


Motion Estimation
• Optical Flow in Computer Vision
– Related topics: feature correspondence, image alignment, image
registration
– Main consideration: Accuracy
• Block Matching Algorithms (BMA) in Signal Processing
– Related topics: video compression
– Main consideration: Efficiency


We are living a moving world
• Perceiving, understanding and predicting motion is an
important part of our daily lives
• Even “impoverished” motion data can evoke a strong
percept [1]


Outline
 Optical Flow (Pixel-level)
 What is optical flow?
 Lucas-Kanade (LK) algorithm [2]
 Horn-Schunck (HS) algorithm [3]
 Block Matching Algorithm (BMA) (Block-level)
 The principle of BMA
 Full search scheme
 Three step search [4]
 New three step search [5]
 Four step search [6]
 Diamond search scheme [7]